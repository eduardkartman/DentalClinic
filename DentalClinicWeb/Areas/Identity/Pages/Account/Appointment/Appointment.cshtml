@page
@using DentalClinicWeb.Areas.Identity.Pages.Account.Appointment
@model AppointmentModel

@{
    ViewData["Title"] = "Create Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    <div class="alert alert-success">
        @Html.DisplayFor(m => m.StatusMessage)
    </div>
}
@if (!ModelState.IsValid)
{
    <script>
        var errorMessage = "Errors:\n";
        @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
        {
            <text>errorMessage += "- @Html.Raw(error.ErrorMessage)\n"; </text>
        }
            alert(errorMessage);
    </script>
}


<style>
    .selectedRow {
        outline: 2px solid #007bff;
    }

    .selectDoctorButton,
    .selectTreatmentButton {
        background-color: #007bff;
        color: #fff;
        border: none;
        cursor: pointer;
        padding: 5px 10px;
        border-radius: 20px; /* Set border-radius to make it rounded */
    }

    .card {
        border-radius: 20px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
    }

    .form-group label {
        font-weight: bold;
    }

    .rounded-frame {
        border-radius: 20px;
        border: 1px solid #ddd;
        padding: 20px;
        margin-bottom: 20px;
        background-color: #f8f8f8;
    }

    h2 {
        color: #000000;
    }

    ul {
        list-style-type: none;
        padding: 0;
    }


        .selectDoctorButton.selected,
        .selectTreatmentButton.selected {
            background-color: #28a745;
        }

    /* New styles */

    /* Style for the main content */
    main {
        padding: 20px;
        border-radius: 10px;
        background-color: #f8f9fa;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    /* Style for the headings */
    h1,
    h2,
    h3 {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 20px;
    }

    /* Style for the form input fields */
    input[type="datetime-local"],
    .form-control {
        border-radius: 5px;
    }

    /* Style for the table */
    table {
        border-radius: 5px;
        overflow: hidden; /* Ensure table border-radius is applied to inner elements */
    }

    /* Style for the table header */
    th {
        background-color: #f8f9fa;
        font-weight: bold;
        color: #333;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }

    /* Style for the table rows */
    tbody tr:nth-child(even) {
        background-color: #f8f9fa;
    }

    /* Style for the table cells */
    td {
        border-bottom: 1px solid #dee2e6;
    }

    /* Style for the submit button */
    #submitBtn {
        margin-top: 20px;
        border-radius: 20px;
    }

    /* Style for the container */
    .container-fluid {
        padding: 0; /* Remove padding to make the main content full-width */
    }

    /* Style for the error box */
    #error-box {
        padding-right: 15px; /* Adjust as per your needs */
    }
</style>

<div class="container-fluid" id="error-box">
    <div class="row">
        <!-- Sidebar -->
        <nav class="col-md-2 d-none d-md-block bg-light sidebar">
            <div class="sidebar-sticky">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="PatientView">Panou Principal</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Appointment/Appointment">Programări</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" asp-area="Identity" asp-page="/Account/Treatments/Visit">Tratamente</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <span data-feather="users"></span>
                            Pacienti
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <span data-feather="bar-chart-2"></span>
                            Rapoarte
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">
                            <span data-feather="layers"></span>
                            Integrations
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
        <!-- Main Content -->
        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Crează o Programare</h1>
            </div>
            <form method="post">
                <!-- Doctors table -->
                <!-- Hidden input field to store selected doctor's ID -->
                <div class="form-group">
                    <h3>Selectează Doctorul Dorit:</h3>
                    <table id="doctors-table" class="table table-striped">
                        <thead>
                            <tr>
                                <th>Nume</th>
                                <th>Email</th>
                                <th>Mobil</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var doctor in Model.Doctors)
                            {
                                <tr>
                                    <td>@doctor.FirstName @doctor.LastName</td>
                                    <td>@doctor.Email</td>
                                    <td>@doctor.PhoneNumber</td>
                                    <td>
                                        <button type="button" class="selectDoctorButton" data-doctor-id="@doctor.Id" style="background-color: #007bff">Selectează</button>
                                        <input asp-for="Appointment.DoctorId" type="hidden" id="doctorId" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <br/>
                <br/>
                <!-- Treatments table -->
                <div class="form-group">
                    <h3>Selectează Tratamentul Dorit:</h3>
                    <table id="treatments-table" class="table table-striped">
                        <thead>
                            <tr>
                                <th>Nume</th>
                                <th>Preț ($)</th>
                                <th>Descriere</th>
                                <th>Durată (în minute)</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var treatment in Model.Treatments)
                            {
                                <tr>
                                    <td>@treatment.Name</td>
                                    <td>@treatment.Price</td>
                                    <td>@treatment.Description</td>
                                    <td>@treatment.DurationInMinutes</td>
                                    <td>
                                        <button type="button" class="selectTreatmentButton" data-treatment-id="@treatment.Id"style="background-color: #007bff">Selectează</button>
                                        <input asp-for="Appointment.TreatmentId" type="hidden" id="treatmentId" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <br />
                <!-- Calendar -->
                <div class="form-group">
                    <h3>Selectează Data și Ora:</h3>
                    <div class="input-group date" id="datetime-picker" data-target-input="nearest">
                        <input asp-for="DateTime" type="datetime-local" class="form-control" />
                        <div class="input-group-append" data-target="#datetime-picker" data-toggle="datetimepicker">
                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                        </div>
                    </div>
                </div>
                <br />
                <button id="submitBtn" type="submit" class="btn btn-primary" style="background-color: #007bff">Efectuează</button>
            </form>
        </main>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/js/tempusdominus-bootstrap-4.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.1/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

    <!-- JavaScript code -->
    <script>
        var selectedTreatmentId = null; // Store selected treatment ID
        var selectedDoctorId = null; // Store selected doctor ID

        $(document).ready(function () {
            // Capture selected doctor's ID
            $(".selectDoctorButton").click(function () {
                var doctorId = $(this).data("doctor-id");
                $("#doctorId").val(doctorId);
                selectedDoctorId = doctorId;
                $("tr").removeClass("selectedRow"); // Remove selection from all rows
                $(this).closest("tr").addClass("selectedRow"); // Add selection to clicked row
            });

            // Capture unselect doctor event
            $(".unselectDoctorButton").click(function () {
                selectedDoctorId = null;
                $(this).closest("tr").removeClass("selectedRow"); // Remove selection from clicked row
            });

            // Capture selected treatment's ID
            $(".selectTreatmentButton").click(function () {
                var treatmentId = $(this).data("treatment-id");
                $("#treatmentId").val(treatmentId);
                selectedTreatmentId = treatmentId;
                $("tr").removeClass("selectedRow"); // Remove selection from all rows

                // Add selection to clicked row and corresponding doctor row
                $(this).closest("tr").addClass("selectedRow");
                $(".selectDoctorButton[data-doctor-id='" + selectedDoctorId + "']").closest("tr").addClass("selectedRow");
            });

            // Add click event handler for the submit button
            $('#submitBtn').on('click', function () {
                var doctorId = $('#doctorId').val();
                if (!doctorId) {
                    alert('Te rugăm să selectezi un doctor.');
                    return false;
                }

                var treatmentId = $('#treatmentId').val();
                if (!treatmentId) {
                    alert('Te rugăm să selectezi un tratament.');
                    return false;
                }

                // Check if a date is selected
                if (!$('#DateTime').val()) {
                    alert('Te rugăm să selectezi o dată și o oră.');
                    return false;
                }
            });
        });
    </script>





    <script>
        $(function () {
            $('#datetime-picker').datetimepicker({
                format: 'YYYY-MM-DD HH:mm',
                minDate: moment(),
                disabledHours: [0, 1, 2, 3, 4, 5, 6, 7, 8, 19, 20, 21, 22, 23],
                enabledHours: [9, 10, 11, 12, 13, 14, 15, 16, 17, 18],
                stepping: 15,
                sideBySide: true,
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-chevron-up',
                    down: 'fa fa-chevron-down',
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                },
                disabledDates: [/* array of disabled dates, if any */],
                beforeShowDay: function (date) {
                    var disabled = true; // by default, the date is disabled
                    var currentDate = moment(date);
                    var appointmentCount = 0; // initialize appointment count to zero

                    // loop through appointments to check if the selected doctor has more than 5 appointments on the current date
                    for (var i = 0; i < appointments.length; i++) {
                        var appointmentDate = moment(appointments[i].date, 'YYYY-MM-DD HH:mm');
                        var appointmentDoctor = appointments[i].doctor;

                        if (currentDate.isSame(appointmentDate, 'day') && appointmentDoctor === selectedDoctor) {
                            appointmentCount++;
                        }
                    }

                    // check if the selected date is not disabled and the selected doctor has less than 5 appointments on the selected date
                    if (!dateIsDisabled(date) && appointmentCount < 5) {
                        disabled = false;
                    }

                    return [disabled, ''];
                },
                tooltips: {
                    // tooltip message to show when the date is disabled
                    disabled: 'This date is not available for the selected doctor. Please choose another date.'
                }
            });
        });

        // function to check if the selected date is disabled (weekends, holidays, etc.)
        function dateIsDisabled(date) {
            var disabled = false;
            var currentDate = moment(date);

            // check if the date is a weekend day
            if (currentDate.day() === 0 || currentDate.day() === 6) {
                disabled = true;
            }

            // add more conditions to disable specific dates, if any

            return disabled;
        }
    </script>

}
