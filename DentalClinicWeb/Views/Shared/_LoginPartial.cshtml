@using DentalClinicWeb.Data;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext Context

<head>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/popper.js/dist/umd/popper.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>

</head>
<style>
    .dropdown-menu {
        z-index: 9999;
    }

</style>

@{
    var user = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <br />
        <li>
            <div class="dropdown">
                <a class="nav-link text-white dropdown-toggle" href="#" id="notificationsDropdown" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @{
                        var notificationCount = Context.Notifications.Count(n => n.ReceiverId == user.Id);
                        var numberNewNotifications = Context.Notifications.Count(n => n.ReceiverId == user.Id && !n.IsRead);
                        var numberPastNotifications = Context.Notifications.Count(n => n.ReceiverId == user.Id && n.IsRead);
                    }
                    <i class="bi bi-bell-fill"></i>
                    @if (numberNewNotifications > 0)
                    {
                        <span class="badge bg-danger">@numberNewNotifications</span>
                    }
                </a>
                <div class="dropdown-menu dropdown-menu-end" aria-labelledby="notificationsDropdown">
                    @if (Context.Notifications.Any())
                    {
                        var notifications = Context.Notifications.Where(n => n.ReceiverId == user.Id).OrderByDescending(n => n.CreatedAt).Take(5).ToList();
                        var hasUnreadNotifications = Context.Notifications.Any(n => n.ReceiverId == user.Id && n.IsRead == false);
                        var newNotifications = Context.Notifications.Where(n => n.ReceiverId == user.Id && !n.IsRead).OrderByDescending(n => n.CreatedAt).ToList();
                        var pastNotifications = Context.Notifications.Where(n => n.ReceiverId == user.Id && n.IsRead).OrderByDescending(n => n.CreatedAt).ToList();
                        @if (numberNewNotifications > 0)
                        {
                            <h6 class="dropdown-header">Notificări Noi (@numberNewNotifications)</h6>
                            @foreach (var notification in newNotifications.Take(5))
                            {
                                <a class="dropdown-item">
                                    <div class="d-flex align-items-start">
                                        <div class="flex-shrink-0"><i class="bi bi-bell-fill text-danger"></i></div>
                                        <div class="ml-3">
                                            <h6 class="mb-1">@notification.Message</h6>
                                            <small>@notification.CreatedAt.ToShortDateString() @notification.CreatedAt.ToShortTimeString()</small>
                                        </div>
                                    </div>
                                </a>
                            }
                            @if (newNotifications.Count > 5)
                            {
                                <a class="dropdown-item" href="/Notifications/Index">Vezi toate notificările</a>
                            }
                        }
                        if (numberPastNotifications > 0)
                        {
                            <div class="dropdown-divider"></div>
                            <h6 class="dropdown-header">Nitificări din Trecut (@numberPastNotifications)</h6>
                        }
                        @foreach (var notification in pastNotifications.Take(5))
                        {
                            <a class="dropdown-item">
                                <div class="d-flex align-items-start">
                                    <div class="flex-shrink-0"><i class="bi bi-bell-fill"></i></div>
                                    <div class="ml-3">
                                        <h6 class="mb-1">@notification.Message</h6>
                                        <small>@notification.CreatedAt.ToShortDateString() @notification.CreatedAt.ToShortTimeString()</small>
                                    </div>
                                </div>
                            </a>
                        }
                        @if (pastNotifications.Count > 5)
                        {
                            <a class="dropdown-item" href="/Notifications/Index">Vezi Toate Notificările</a>
                        }
                        @if(numberNewNotifications == 0 && numberPastNotifications == 0)
                        {
                            <a class="dropdown-item">
                                <h6 class="mb-1">Nu exista nicio notificare.</h6>
                            </a>
                        }
                    }
                    else
                    {
                        <a class="dropdown-item">
                            <h6 class="mb-1">Nu exista nicio notificare.</h6>
                        </a>
                    }
                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            $("#notificationsDropdown").on("show.bs.dropdown", function () {
                                $.post("/Notifications/SetAllRead");
                            });
                        });
                    </script>
                </div>
            </div>
        </li>
        <br />
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="bi bi-person-fill"></i></a>
        </li>
        <br />
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-white"><i class="bi bi-box-arrow-right"></i></button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-box-arrow-in-right"></i> Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Creare Cont</a>
        </li>
    }
</ul>
